{"version":3,"sources":["fetchMovies.js","markup.js","index.js"],"names":["refs","moviesListEl","document","querySelector","searchEl","fetchTrendingMovies","KEY","response","fetch","movies","json","localStorage","setItem","JSON","stringify","fetchGenres","getItem","genres","receiveGenres","genresId","parse","genresArray","map","genre","includes","id","push","name","length","splice","join","createMarkup","markup","results","result","poster_path","original_title","genre_ids","release_date","slice","insertAdjacentHTML","then","error","console","log"],"mappings":";;;AAuCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAAA,QAAA,YAAA,EAAA,QAAA,cAAA,EAAA,QAAA,UAAA,EAvCM,MAAMA,EAAO,CAClBC,aAAcC,SAASC,cAAc,gBACrCC,SAAUF,SAASC,cAAc,gBAE5B,eAAeE,IACdC,MACAC,QAAiBC,MAAO,4FACxBC,QAAeF,EAASG,OAEvBD,OADPE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,IACvCA,EAGF,eAAeM,IAChB,IAACJ,aAAaK,QAAQ,UAAW,CAC7BV,MAAAA,EAAM,mCACNC,QAAiBC,+DACoCF,qBAErD,OAAEW,SAAiBV,EAASG,OAClCC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUG,KAK3C,SAASC,EAAcC,GACtBF,MAAAA,EAASJ,KAAKO,MAAMT,aAAaK,QAAQ,WACzCK,EAAc,GAYbA,OAXPJ,EAAOK,IAAIC,IACLJ,EAASK,SAASD,EAAME,KAC1BJ,EAAYK,KAAKH,EAAMI,QAIvBN,EAAYO,OAAS,IACvBP,EAAYQ,OAAO,GACnBR,EAAYK,KAAK,UAGZL,EAAYS,KAAK,MACzB,QAAA,KAAA;;AClBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EArBD,IAAA,EAAA,QAAA,iBACe,SAASC,EAAatB,GAC7BuB,MAAAA,EAASvB,EAAOwB,QACnBX,IAAIY,6EAEuCA,EAAOC,oBAC/CD,EAAOE,wGAIJF,EAAOE,wEAGT,EAAcF,EAAAA,eAAAA,EAAOG,gBAAgBH,EAAOI,aAAaC,MAAM,EAAG,kCAKtET,KAAK,IAEH7B,EAAAA,KAAAA,aAAauC,mBAAmB,YAAaR;;ACTpD,aAXA,QAAA,oBACA,IAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,gBASA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GARA,KACwBS,EAAAA,EAAAA,uBAAAA,KAAKhC,KACZA,EAAAA,EAAAA,SAAAA,KAEf,MAAOiC,GACPC,QAAQC,IAAIF,IAGd,EAAA,EAAA","file":"src.0498c956.js","sourceRoot":"../src","sourcesContent":["export const refs = {\n  moviesListEl: document.querySelector('.movies-list'),\n  searchEl: document.querySelector('.submit-btn'),\n};\nexport async function fetchTrendingMovies() {\n  const KEY = '4a38965c8274ee66c1019c21406c4653';\n  const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`);\n  const movies = await response.json();\n  localStorage.setItem('movies', JSON.stringify(movies));\n  return movies;\n}\n\nexport async function fetchGenres() {\n  if (!localStorage.getItem('genres')) {\n    const KEY = '4a38965c8274ee66c1019c21406c4653';\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=en-US`,\n    );\n    const { genres } = await response.json();\n    localStorage.setItem('genres', JSON.stringify(genres));\n  } else {\n    return;\n  }\n}\nexport function receiveGenres(genresId) {\n  const genres = JSON.parse(localStorage.getItem('genres'));\n  const genresArray = [];\n  genres.map(genre => {\n    if (genresId.includes(genre.id)) {\n      genresArray.push(genre.name);\n    }\n  });\n\n  if (genresArray.length > 2) {\n    genresArray.splice(2);\n    genresArray.push('Other');\n  }\n\n  return genresArray.join(', ');\n}\n","import { refs, receiveGenres } from './fetchMovies';\nexport default function createMarkup(movies) {\n  const markup = movies.results\n    .map(result => {\n      return `<li class=\"movie-card\">\n     <img src=https://image.tmdb.org/t/p/w300/${result.poster_path} alt=\"${\n        result.original_title\n      }poster\" loading=\"lazy\" class=\"image\"/>\n     \n       <p class=\"movie-name\">\n         ${result.original_title}\n       </p>\n       <p class=\"movie-genre\">\n       ${receiveGenres(result.genre_ids)} | ${result.release_date.slice(0, 4)}\n     </p>\n     \n   </li>`;\n    })\n    .join('');\n\n  refs.moviesListEl.insertAdjacentHTML('beforeend', markup);\n}\n","import './css/styles.css';\nimport { refs, fetchTrendingMovies, fetchGenres } from './fetchMovies';\nimport createMarkup from './markup.js';\ntry {\n  fetchTrendingMovies().then(movies => {\n    createMarkup(movies);\n  });\n} catch (error) {\n  console.log(error);\n}\n\nfetchGenres();\n"]}